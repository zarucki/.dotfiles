" vim: filetype=vifm :
" Show list of matches on tab completion in command-line mode
set wildmenu
set ignorecase
set smartcase
set hlsearch
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=6

set history=100
set sortnumbers
set undolevels=100
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,dirstack,registers,bookmarks

set statusline="  %t%= %A %10u:%-7g %15s %20d  "

" Use vim help file instead of the .txt file
set vimhelp

" Move files temporary to trash directory
set trash

" If you would like to run an executable file when you
" press return on the file name set this.
set runexec

mark d ~/Desktop/desktop

"The command macros may be used in user commands.
" %" wrapes in double quotes
"  %a        user arguments.  When user arguments contain macros, they are
"            expanded before preforming substitution of %a.
"  %c  %"c   the current file under the cursor.
"  %C  %"C   the current file under the cursor in the other directory.
"  %f  %"f   all of the selected files.
"  %F  %"F   all of the selected files in the other directory list.
"  %b  %"b   same as %f %F.
"  %d  %"d   full path to current directory.
"  %D  %"D   full path to other file list directory.
"  %rx %"rx  full paths to files in the register {x}.  In case of invalid
"            symbol in place of {x}, it's processed with the rest of the
"            line and default register is used.
"  %m        show command output in a menu.
"  %M        same as %m, but l (or Enter) key is handled like for :locate
"            and :find commands.
"  %S        show command output in the status bar.
"  %s        execute command in split window of active terminal
"            multiplexer (ignored if not running inside one).
"  %i        completely ignore command output.

"we need second quotes to escape that
nmap <cr> :!cmd /c "%"c" &<cr>
" for some reason it needs space at the end
nmap ,v :!gvim --remote-silent %"c & <cr>
nmap ,e :!explorer %"c &<cr>

" Tortoise mappings
nmap tu :!tortoiseproc /command:update /path:%"c &<cr>
nmap tc :!tortoiseproc /command:commit /path:%"c &<cr>
nmap tl :!tortoiseproc /command:log /path:%"c &<cr>
nmap tb :!tortoiseproc /command:blame /path:%"c &<cr>
nmap ts :!tortoiseproc /command:repostatus /path:%"c &<cr>
nmap td :!tortoiseproc /command:cleanup /path:%"c &<cr>
nmap tw :!tortoiseproc /command:switch /path:%"c &<cr>
nmap tr :!tortoiseproc /command:remove /path:%"c &<cr>

" make directory shortcut
nmap <c-n> :mkdir<space>
" Yank current directory path into the clipboard
nmap yd :!echo %"d | clip %i<cr>
" Yank current file path into the clipboard
nmap yf :!echo %"c:p | clip %i<cr>
" copy over file to adjacent side
nmap <c-y> yy<c-w>wp
" move
nmap <c-c> dd<c-w>wp
" Mappings for faster renaming
nmap I cw<c-a>
nmap cc cw<c-u>
nmap A cw<c-w>

nmap S :sort<cr>
nmap s :sort<cr>

nmap ,b :marks<cr>

nmap <c-j> <C-W>j
nmap <c-k> <C-W>k
nmap <c-l> <C-W>l
nmap <c-h> <C-W>h

" swap screens
nmap <c-w>o <C-W>x
nmap w :view<cr>

nmap ,z :!7z.exe x -o%"c:r %"c %i &<cr>
